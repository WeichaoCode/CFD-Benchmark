```python
import numpy as np
import matplotlib.pyplot as plt

# Problem parameters
L = 2 * np.pi  # Domain length
nx = 200       # Number of spatial points
nt = 500       # Number of time steps
dx = L / (nx - 1)
dt = 5 / nt    # Total simulation time is 5

# Initialize grid
x = np.linspace(0, L, nx)
u = np.sin(x) + 0.5 * np.sin(0.5 * x)

# Lax-Wendroff method for solving advection equation
def lax_wendroff_step(u):
    # Periodic boundary conditions
    u_periodic = np.zeros(len(u) + 2)
    u_periodic[1:-1] = u
    u_periodic[0] = u[-1]
    u_periodic[-1] = u[0]
    
    # Lax-Wendroff numerical scheme
    u_new = np.zeros_like(u)
    for i in range(len(u)):
        # Flux calculation
        f_l = u_periodic[i]
        f_r = u_periodic[i+2]
        
        # Lax-Wendroff update
        u_new[i] = u_periodic[i+1] - 0.5 * dt/dx * (f_r - f_l) + \
                   0.5 * (dt/dx)**2 * (f_r - 2*u_periodic[i+1] + f_l)
    
    return u_new

# Time integration
for _ in range(nt):
    u = lax_wendroff_step(u)

# Save final solution
np.save('u.npy', u)
```