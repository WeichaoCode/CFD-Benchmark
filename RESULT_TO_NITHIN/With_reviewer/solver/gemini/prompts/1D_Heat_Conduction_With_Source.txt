```python
import numpy as np

# Problem parameters
k = 1000.0  # Thermal conductivity (W/(m.K))
Q = 2e6  # Heat generation (W/m^3)
L = 0.5  # Length of the rod (m)
T_0 = 100.0  # Temperature at x=0 (C)
T_L = 200.0  # Temperature at x=L (C)

# Numerical parameters
n_cells = 50  # Number of cells
dx = L / n_cells  # Cell size

# Initialize temperature array
T = np.zeros(n_cells + 2)  # Include ghost cells
T[0] = T_0
T[-1] = T_L

# Finite Volume Method
# Discretized equation: k * (T_{i+1} - 2*T_i + T_{i-1}) / dx^2 + Q = 0
# Rearranging: T_i = (T_{i+1} + T_{i-1} + Q*dx^2/k) / 2

# Iterative solution
max_iter = 10000
tolerance = 1e-6
error = 1.0
iteration = 0

while error > tolerance and iteration < max_iter:
    T_old = np.copy(T)

    # Update internal cells
    for i in range(1, n_cells + 1):
        T[i] = (T[i + 1] + T[i - 1] + Q * dx**2 / k) / 2

    # Apply boundary conditions (Dirichlet)
    T[0] = T_0
    T[-1] = T_L

    # Calculate error
    error = np.max(np.abs(T - T_old))
    iteration += 1

# Remove ghost cells for final solution
T_final = T[1:-1]

# Save the temperature distribution
np.save('T.npy', T_final)
```