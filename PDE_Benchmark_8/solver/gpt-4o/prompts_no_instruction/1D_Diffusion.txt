```python
import numpy as np

# Parameters
nu = 0.3
nx = 41
nt = 20
sigma = 0.2
dx = 2 / (nx - 1)
dt = sigma * dx**2 / nu

# Discretize the spatial domain
x = np.linspace(0, 2, nx)

# Initial condition
u = np.ones(nx)
u[int(0.5 / dx):] = 2

# Time-stepping loop
for n in range(nt):
    un = u.copy()
    for i in range(1, nx - 1):
        u[i] = un[i] + nu * dt / dx**2 * (un[i+1] - 2*un[i] + un[i-1])
    # Apply boundary conditions
    u[0] = 1
    u[-1] = 0

# Save the final solution
np.save('u.npy', u)
```