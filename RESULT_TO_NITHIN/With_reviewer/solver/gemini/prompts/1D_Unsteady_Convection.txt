```python
import numpy as np

def solve_convection():
    # Parameters
    u = 0.2  # m/s
    L = 2.0  # Domain length
    T = 2.5  # Total time
    nx = 100  # Number of spatial cells
    nt = 250  # Number of time steps
    dx = L / nx
    dt = T / nt
    m = 0.5
    s = 0.1

    # Initialize phi
    x = np.linspace(0, L, nx + 1)
    phi = np.exp(-(x[:-1] - m)**2 / s**2)

    # Boundary conditions
    phi[0] = 0.0
    phi[-1] = 0.0

    # Finite Volume Method - Upwind scheme
    for _ in range(nt):
        phi_old = phi.copy()
        for i in range(1, nx):
            phi[i] = phi_old[i] - u * dt / dx * (phi_old[i] - phi_old[i-1])

        # Boundary conditions
        phi[0] = 0.0
        phi[-1] = 0.0

    # Save the final solution
    np.save('phi.npy', phi)

solve_convection()
```