Here is the Python code that implements the solution of the given problem using the Lax-Wendroff method.

```python
import numpy as np
import matplotlib.pyplot as plt

# Set parameters
nu = 0.5
dt = 0.01
T = 500
dx = dt / nu
x = np.arange(0, 2*np.pi, dx)
u = np.sin(x) + 0.5*np.sin(0.5*x)
un = np.empty_like(u)
F = 0.5 * u**2

for n in range(T):
    un = u.copy()
    F = 0.5 * un**2
    u[1:-1] = un[1:-1] - dt/(2*dx)*(F[2:] - F[:-2]) + dt**2/(2*dx**2)*((un[2:]+un[1:-1])*(F[2:]-F[1:-1]) - (un[1:-1]+un[:-2])*(F[1:-1]-F[:-2]))

    # Apply periodic boundary conditions
    u[0] = un[0] - dt/(2*dx)*(F[1] - F[-1]) + dt**2/(2*dx**2)*((un[1]+un[0])*(F[1]-F[0]) - (un[0]+un[-1])*(F[0]-F[-1]))
    u[-1] = un[-1] - dt/(2*dx)*(F[0] - F[-2]) + dt**2/(2*dx**2)*((un[0]+un[-1])*(F[0]-F[-1]) - (un[-1]+un[-2])*(F[-1]-F[-2]))

# Save the solution
np.save('solution.npy', u)

# Plot the solution
plt.figure(figsize=(10,6))
plt.plot(x, u, label='Lax-Wendroff Method')
plt.legend()
plt.xlabel('x')
plt.ylabel('u')
plt.title('Solution of the 1-D Nonlinear Convection Equation')
plt.grid(True)
plt.show()
```

This code first sets the parameters and initializes the wave function `u` and its flux `F`. It then enters a loop over time steps, where it computes the new wave function using the Lax-Wendroff method and applies periodic boundary conditions. After the loop, it saves the final wave function to a `.npy` file and plots it.

The Lax-Wendroff method is a two-step procedure used for the approximate solution of hyperbolic partial differential equations, based on the Lax method with an additional correction term. It is second-order accurate in both space and time.