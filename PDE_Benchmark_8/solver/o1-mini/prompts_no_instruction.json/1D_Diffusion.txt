```python
import numpy as np

# Parameters
nu = 0.3
nx = 41
nt = 20
sigma = 0.2
dx = 2 / (nx - 1)
dt = sigma * dx**2 / nu

# Spatial grid
x = np.linspace(0, 2, nx)

# Initial condition
u = np.ones(nx)
u[np.where(x >= 0.5)] = 2

# Time-stepping
for _ in range(nt):
    u_new = u.copy()
    u_new[1:-1] = u[1:-1] + sigma * (u[2:] - 2 * u[1:-1] + u[0:-2])
    # Apply boundary conditions
    u_new[0] = 1
    u_new[-1] = 0
    u = u_new

# Save the final solution
np.save('u.npy', u)
```