```python
import numpy as np

# Problem Parameters
nx, ny = 31, 31
Lx, Ly = 2.0, 2.0
nu = 1.0
nt = 50

# Grid Generation
dx = Lx / (nx - 1)
dy = Ly / (ny - 1)
x = np.linspace(0, Lx, nx)
y = np.linspace(0, Ly, ny)

# Time Step Calculation
sigma = 0.25
dt = sigma * dx * dy / nu

# Initial Condition
u = np.ones((ny, nx))
u[(x >= 0.5) & (x <= 1), :][:, (y >= 0.5) & (y <= 1)] = 2

# Boundary Conditions
u[0, :] = 1   # Bottom boundary
u[-1, :] = 1  # Top boundary
u[:, 0] = 1   # Left boundary
u[:, -1] = 1  # Right boundary

# Time Integration (Explicit Finite Difference)
for _ in range(nt):
    un = u.copy()
    
    # Interior Points
    u[1:-1, 1:-1] = un[1:-1, 1:-1] + nu * dt * (
        (un[1:-1, 2:] - 2*un[1:-1, 1:-1] + un[1:-1, :-2]) / dx**2 +
        (un[2:, 1:-1] - 2*un[1:-1, 1:-1] + un[:-2, 1:-1]) / dy**2
    )
    
    # Enforce boundary conditions
    u[0, :] = 1
    u[-1, :] = 1
    u[:, 0] = 1
    u[:, -1] = 1

# Save Final Solution
np.save('u.npy', u)
```