```python
import numpy as np

# Grid parameters
nx = 400  # Number of spatial points
nt = 1000  # Number of time steps
dx = 10.0/(nx-1)  # Spatial step size
dt = 0.01  # Time step size
x = np.linspace(-5, 5, nx)  # Spatial grid

# Parameters
c = 1.0  # Convection speed
epsilon = 5e-4  # Damping factor

# Initial condition
u = np.exp(-x**2)  # Gaussian pulse

# Time stepping
for n in range(nt):
    # Periodic boundary conditions
    u_m1 = np.roll(u, 1)   # u[i-1]
    u_p1 = np.roll(u, -1)  # u[i+1]
    
    # Central difference for convection and diffusion
    u_new = u - 0.5*c*dt/dx*(u_p1 - u_m1) + epsilon*dt/(dx*dx)*(u_p1 - 2*u + u_m1)
    
    # Update solution
    u = u_new.copy()

# Save final solution
np.save('u.npy', u)
```