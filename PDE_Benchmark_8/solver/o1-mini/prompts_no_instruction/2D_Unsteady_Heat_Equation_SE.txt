```python
import numpy as np

# Parameters
Q0 = 200.0  # Â°C/s
sigma = 0.1
alpha = 1.0
nx, ny = 41, 41
x = np.linspace(-1, 1, nx)
y = np.linspace(-1, 1, ny)
dx = x[1] - x[0]
dy = y[1] - y[0]
r = 0.1
dt = r * dx**2 / alpha
t_max = 3.0
nt = int(t_max / dt)

# Create meshgrid
X, Y = np.meshgrid(x, y)

# Initial condition
T = 1.0 + 200.0 * np.exp(-(X**2 + Y**2) / (2 * sigma**2))
T_new = T.copy()

# Apply boundary conditions
T[0, :] = 1.0
T[-1, :] = 1.0
T[:, 0] = 1.0
T[:, -1] = 1.0

# Source term
q = Q0 * np.exp(-(X**2 + Y**2) / (2 * sigma**2))

# Time-stepping loop
for _ in range(nt):
    T_new[1:-1, 1:-1] = T[1:-1, 1:-1] + dt * (
        alpha * (
            (T[2:, 1:-1] - 2 * T[1:-1, 1:-1] + T[0:-2, 1:-1]) / dx**2 +
            (T[1:-1, 2:] - 2 * T[1:-1, 1:-1] + T[1:-1, 0:-2]) / dy**2
        ) + q[1:-1, 1:-1]
    )
    # Apply boundary conditions
    T_new[0, :] = 1.0
    T_new[-1, :] = 1.0
    T_new[:, 0] = 1.0
    T_new[:, -1] = 1.0
    # Swap references
    T, T_new = T_new, T

# Save the final temperature field
np.save('T.npy', T)
```