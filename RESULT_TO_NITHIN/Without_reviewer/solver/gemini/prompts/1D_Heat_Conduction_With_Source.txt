```python
import numpy as np

# Problem parameters
k = 1000  # Thermal conductivity (W/(m.K))
Q = 2e6  # Heat generation (W/m^3)
L = 0.5  # Length of the rod (m)
T_0 = 100  # Temperature at x=0 (°C)
T_L = 200  # Temperature at x=L (°C)

# Numerical parameters
n_cells = 50  # Number of finite volumes
dx = L / n_cells  # Cell size

# Discretization
x = np.linspace(dx/2, L-dx/2, n_cells)  # Cell centers

# Initialize temperature array
T = np.zeros(n_cells)

# Finite Volume Method
# Construct coefficient matrix A and source vector b
A = np.zeros((n_cells, n_cells))
b = np.zeros(n_cells)

# Interior cells
for i in range(1, n_cells - 1):
    A[i, i-1] = -k / dx**2
    A[i, i] = 2 * k / dx**2
    A[i, i+1] = -k / dx**2
    b[i] = -Q

# Boundary conditions
# Dirichlet BC at x=0
A[0, 0] = 2 * k / dx**2
A[0, 1] = -k / dx**2
b[0] = -Q - k * T_0 / dx**2

# Dirichlet BC at x=L
A[n_cells-1, n_cells-2] = -k / dx**2
A[n_cells-1, n_cells-1] = 2 * k / dx**2
b[n_cells-1] = -Q - k * T_L / dx**2

# Solve the linear system
T = np.linalg.solve(A, b)

# Save the temperature distribution
np.save('T.npy', T)
```