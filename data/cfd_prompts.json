{
    "prompts": [
        {
            "name": "1D linear convection",
            "prompt": "Simulate the problem: 1D linear convection. Equation format: \u2202u/\u2202t + c\u2202u/\u2202x = 0. Physical properties: wave speed c = 1. Boundary conditions: {}. Initial conditions: u = 2 at 0.5<=x<=1; 1 else where. Domain: x: [0, 2]. Grid: Nx = 101. Time: final time T = 2, time steps nt = 500. Method: finite difference, fully-discrete schemes. Write a Python script to solve this problem and return only the complete Python code, without any explanation or additional text.",
            "key": 1
        },
        {
            "name": "1D nonlinear convection",
            "prompt": "Simulate the problem: 1D nonlinear convection. Equation format: \u2202u/\u2202t + u\u2202u/\u2202x = 0. Physical properties: {}. Boundary conditions: {}. Initial conditions: u = 2 at 0.5<=x<=1; 1 else where. Domain: x: [0, 2]. Grid: Nx = 101. Time: final time T = 2, time steps nt = 500. Method: finite difference, fully-discrete schemes. Write a Python script to solve this problem and return only the complete Python code, without any explanation or additional text.",
            "key": 2
        },
        {
            "name": "1D diffusion equation",
            "prompt": "Simulate the problem: 1D diffusion equation. Equation format: \\frac{\\partial u}{\\partial t} = \\nu \\frac{\\partial^2 u}{\\partial x^2}\n. Physical properties: viscosity nu = 0.3. Boundary conditions: {}. Initial conditions: u = 2 at 0.5<=x<=1; 1 else where. Domain: x: [0, 2]. Grid: Nx = 101. Time: final time T = 2, time steps nt = 500. Method: finite difference, fully-discrete schemes. Write a Python script to solve this problem and return only the complete Python code, without any explanation or additional text.",
            "key": 3
        },
        {
            "name": "1D Burgers' equation",
            "prompt": "Simulate the problem: 1D Burgers' equation. Equation format: \\\\frac{\\\\partial u}{\\\\partial t} + u \\\\frac{\\\\partial u}{\\\\partial x} = \\\\nu \\\\frac{\\\\partial^2 u}{\\\\partial x^2}. Physical properties: viscosity nu = 0.07. Boundary conditions: all boundaries periodic boundary conditions. Initial conditions: u = -\\\\frac{2\\\\nu}{\\\\phi} \\\\frac{\\\\partial \\\\phi}{\\\\partial x} + 4, where \\\\phi = \\\\exp\\\\left(\\\\frac{-x^2}{4\\\\nu}\\\\right) + \\\\exp\\\\left(\\\\frac{-(x - 2\\\\pi)^2}{4\\\\nu}\\\\right). Domain: x: [0, 2]. Grid: Nx = 101. Time: final time T = 2, time steps nt = 500. Method: finite difference, fully-discrete schemes. Write a Python script to solve this problem and return only the complete Python code, without any explanation or additional text.",
            "key": 4
        },
        {
            "name": "2D linear convection equation",
            "prompt": "Simulate the problem: 2D linear convection equation. Equation format: \\\\frac{\\\\partial u}{\\\\partial t} + c \\\\frac{\\\\partial u}{\\\\partial x} + c \\\\frac{\\\\partial u}{\\\\partial y} = 0. Physical properties: wave speed c = 1. Boundary conditions: all boundaries: u = 1 for x = 0,2 and y = 0,2. Initial conditions: u(x,y) = 2 for 0.5 \u2264 x, y \u2264 1, and u(x,y) = 1 everywhere else. Domain: x: [0, 2], y: [0, 2]. Grid: Nx = 101, Ny = 101. Time: final time T = 2, time steps nt = 500. Method: finite difference, fully-discrete schemes. Write a Python script to solve this problem and return only the complete Python code, without any explanation or additional text.",
            "key": 5
        },
        {
            "name": "2D convection equation",
            "prompt": "Simulate the problem: 2D convection equation. Equation format: \\\\frac{\\\\partial u}{\\\\partial t} + u \\\\frac{\\\\partial u}{\\\\partial x} + v \\\\frac{\\\\partial u}{\\\\partial y} = 0 \\\\] \\n \\\\[ \\\\frac{\\\\partial v}{\\\\partial t} + u \\\\frac{\\\\partial v}{\\\\partial x} + v \\\\frac{\\\\partial v}{\\\\partial y} = 0. Physical properties: {}. Boundary conditions: all boundaries: u = 1, v = 1 for x = 0,2 and y = 0,2. Initial conditions: u(x,y) = 2 for 0.5 \u2264 x, y \u2264 1, and u(x,y) = 1 everywhere else; v(x,y) = 2 for 0.5 \u2264 x, y \u2264 1, and v(x,y) = 1 everywhere else. Domain: x: [0, 2], y: [0, 2]. Grid: Nx = 101, Ny = 101. Time: final time T = 2, time steps nt = 500. Method: finite difference, fully-discrete schemes. Write a Python script to solve this problem and return only the complete Python code, without any explanation or additional text.",
            "key": 6
        },
        {
            "name": "2D diffusion equation",
            "prompt": "Simulate the problem: 2D diffusion equation. Equation format: \\n \\\\[ \\\\frac{\\\\partial u}{\\\\partial t} = \\\\nu \\\\frac{\\\\partial^2 u}{\\\\partial x^2} + \\\\nu \\\\frac{\\\\partial^2 u}{\\\\partial y^2} \\\\]. Physical properties: viscosity nu =0.05. Boundary conditions: all boundaries: u = 1 for x = 0,2 and y = 0,2. Initial conditions: u(x,y) = 2 for 0.5 \u2264 x, y \u2264 1, and u(x,y) = 1 everywhere else. Domain: x: [0, 2], y: [0, 2]. Grid: Nx = 101, Ny = 101. Time: final time T = 2, time steps nt = 500. Method: finite difference, fully-discrete schemes. Write a Python script to solve this problem and return only the complete Python code, without any explanation or additional text.",
            "key": 7
        },
        {
            "name": "2D Burgers' equation",
            "prompt": "Simulate the problem: 2D Burgers' equation. Equation format: \\frac{\\partial u}{\\partial t} + u \\frac{\\partial u}{\\partial x} + v \\frac{\\partial u}{\\partial y} = \\nu \\left( \\frac{\\partial^2 u}{\\partial x^2} + \\frac{\\partial^2 u}{\\partial y^2} \\right) \\frac{\\partial v}{\\partial t} + u \\frac{\\partial v}{\\partial x} + v \\frac{\\partial v}{\\partial y} = \\nu \\left( \\frac{\\partial^2 v}{\\partial x^2} + \\frac{\\partial^2 v}{\\partial y^2} \\right). Physical properties: viscosity nu = 0.01. Boundary conditions: all boundaries u = 1, v = 1 for x = 0,2 and y = 0,2. Initial conditions: u(x,y) = 2 for 0.5 \u2264 x, y \u2264 1, and u(x,y) = 1 everywhere else ;v(x,y) = 2 for 0.5 \u2264 x, y \u2264 1, and v(x,y) = 1 everywhere else. Domain: x: [0, 2], y: [0, 2]. Grid: Nx = 101, Ny = 101. Time: final time T = 2, time steps nt = 500. Method: finite difference, fully-discrete schemes. Write a Python script to solve this problem and return only the complete Python code, without any explanation or additional text.",
            "key": 8
        },
        {
            "name": "2D Laplace equation",
            "prompt": "Simulate the problem: 2D Laplace equation. Equation format: \\frac{\\partial^2 p}{\\partial x^2} + \\frac{\\partial^2 p}{\\partial y^2} = 0. Physical properties: {}. Boundary conditions: all boundaries: p = 0 at x = 0, p = y at x = 2,\\frac{\\partial p}{\\partial y} = 0 at y = 0, 1. Initial conditions: p = 0 everywhere. Domain: x: [0, 2], y: [0, 2]. Grid: Nx = 101, Ny = 101. Time: final time T = 2, time steps nt = 500. Method: finite difference, fully-discrete schemes. Write a Python script to solve this problem and return only the complete Python code, without any explanation or additional text.",
            "key": 9
        },
        {
            "name": "2D Poisson equation",
            "prompt": "Simulate the problem: 2D Poisson equation. Equation format: \\frac{\\partial^2 p}{\\partial x^2} + \\frac{\\partial^2 p}{\\partial y^2} = b\n. Physical properties: source term: b_{i,j} = 100 at i = nx/4, j=ny/4; b_{i,j}=-100 at i=3nx/4, j=3ny/4; b_{i,j}=0, elsewhere. Boundary conditions: all boundaries: p = 0 at x = 0, x = 2 and y = 0 and y = 1. Initial conditions: p = 0. Domain: x: [0, 2], y: [0, 2]. Grid: Nx = 101, Ny = 101. Time: final time T = 2, time steps nt = 500. Method: finite difference, fully-discrete schemes. Write a Python script to solve this problem and return only the complete Python code, without any explanation or additional text.",
            "key": 10
        },
        {
            "name": "Channel Flow with Navier\u2013Stokes",
            "prompt": "Simulate the problem: Channel Flow with Navier\u2013Stokes. Equation format: \\begin{align}\n\\frac{\\partial u}{\\partial t} + u \\frac{\\partial u}{\\partial x} + v \\frac{\\partial u}{\\partial y} &= -\\frac{1}{\\rho} \\frac{\\partial p}{\\partial x} + \\nu \\left( \\frac{\\partial^2 u}{\\partial x^2} + \\frac{\\partial^2 u}{\\partial y^2} \\right) + F \\\\\n\\frac{\\partial v}{\\partial t} + u \\frac{\\partial v}{\\partial x} + v \\frac{\\partial v}{\\partial y} &= -\\frac{1}{\\rho} \\frac{\\partial p}{\\partial y} + \\nu \\left( \\frac{\\partial^2 v}{\\partial x^2} + \\frac{\\partial^2 v}{\\partial y^2} \\right) \\\\\n\\frac{\\partial^2 p}{\\partial x^2} + \\frac{\\partial^2 p}{\\partial y^2} &= -\\rho \\left( \\frac{\\partial u}{\\partial x} \\frac{\\partial u}{\\partial x} + 2 \\frac{\\partial u}{\\partial y} \\frac{\\partial v}{\\partial x} + \\frac{\\partial v}{\\partial y} \\frac{\\partial v}{\\partial y} \\right)\n\\end{align}. Physical properties: source term: F=1  everywhere; density: rho = 1, viscosity: nu = 0.1. Boundary conditions: all boundaries: u,v,p\n  are periodic on x=0,2\nu,v=0\n at y=0,2\n\\frac{\\partial p}{\\partial y} = 0\n at y=0,2. Initial conditions: p = 0, u = 0, v = 0. Domain: x: [0, 2], y: [0, 2]. Grid: Nx = 101, Ny = 101. Time: final time T = 2, time steps nt = 500. Method: finite difference, fully-discrete schemes. Write a Python script to solve this problem and return only the complete Python code, without any explanation or additional text.",
            "key": 11
        },
        {
            "name": "Cavity Flow with Navier\u2013Stokes",
            "prompt": "Simulate the problem: Cavity Flow with Navier\u2013Stokes. Equation format: \\begin{align}\n\\frac{\\partial u}{\\partial t} + u \\frac{\\partial u}{\\partial x} + v \\frac{\\partial u}{\\partial y} &= -\\frac{1}{\\rho} \\frac{\\partial p}{\\partial x} + \\nu \\left( \\frac{\\partial^2 u}{\\partial x^2} + \\frac{\\partial^2 u}{\\partial y^2} \\right) \\\\\n\\frac{\\partial v}{\\partial t} + u \\frac{\\partial v}{\\partial x} + v \\frac{\\partial v}{\\partial y} &= -\\frac{1}{\\rho} \\frac{\\partial p}{\\partial y} + \\nu \\left( \\frac{\\partial^2 v}{\\partial x^2} + \\frac{\\partial^2 v}{\\partial y^2} \\right) \\\\\n\\frac{\\partial^2 p}{\\partial x^2} + \\frac{\\partial^2 p}{\\partial y^2} &= -\\rho \\left( \\frac{\\partial u}{\\partial x} \\frac{\\partial u}{\\partial x} + 2 \\frac{\\partial u}{\\partial y} \\frac{\\partial v}{\\partial x} + \\frac{\\partial v}{\\partial y} \\frac{\\partial v}{\\partial y} \\right)\n\\end{align}. Physical properties: density: rho = 1, viscosity: nu = 0.1. Boundary conditions: {'all boundaries': 'u=1\\n  at y=2\\n (the \"lid\");\\n\\nu,v=0\\n on the other boundaries;\\n\\n\u2202p\u2202y=0\\n at y=0\\n;\\n\\np=0\\n at y=2\\n\\x0crac{\\\\partial p}{\\\\partial y} = 0\\n at x=0,2'}. Initial conditions: p = 0, u = 0, v = 0. Domain: x: [0, 2], y: [0, 2]. Grid: Nx = 101, Ny = 101. Time: final time T = 2, time steps nt = 500. Method: finite difference, fully-discrete schemes. Write a Python script to solve this problem and return only the complete Python code, without any explanation or additional text.",
            "key": 12
        },
        {
            "name": "1D linear convection",
            "prompt": "Simulate the problem: 1D linear convection. Equation format: \u2202u/\u2202t + c\u2202u/\u2202x = 0. Physical properties: wave speed c = 1. Boundary conditions: {}. Initial conditions: u = 2 at 0.5<=x<=1; 1 else where. Domain: x: [0, 2]. Grid: Nx = 101. Time: final time T = 2, time steps nt = 500. Method: finite difference, semi-discrete methods. Write a Python script to solve this problem and return only the complete Python code, without any explanation or additional text.",
            "key": 13
        },
        {
            "name": "1D nonlinear convection",
            "prompt": "Simulate the problem: 1D nonlinear convection. Equation format: \u2202u/\u2202t + u\u2202u/\u2202x = 0. Physical properties: {}. Boundary conditions: {}. Initial conditions: u = 2 at 0.5<=x<=1; 1 else where. Domain: x: [0, 2]. Grid: Nx = 101. Time: final time T = 2, time steps nt = 500. Method: finite difference, semi-discrete methods. Write a Python script to solve this problem and return only the complete Python code, without any explanation or additional text.",
            "key": 14
        },
        {
            "name": "1D diffusion equation",
            "prompt": "Simulate the problem: 1D diffusion equation. Equation format: \\frac{\\partial u}{\\partial t} = \\nu \\frac{\\partial^2 u}{\\partial x^2}\n. Physical properties: viscosity nu = 0.3. Boundary conditions: {}. Initial conditions: u = 2 at 0.5<=x<=1; 1 else where. Domain: x: [0, 2]. Grid: Nx = 101. Time: final time T = 2, time steps nt = 500. Method: finite difference, semi-discrete methods. Write a Python script to solve this problem and return only the complete Python code, without any explanation or additional text.",
            "key": 15
        },
        {
            "name": "1D Burgers' equation",
            "prompt": "Simulate the problem: 1D Burgers' equation. Equation format: \\\\frac{\\\\partial u}{\\\\partial t} + u \\\\frac{\\\\partial u}{\\\\partial x} = \\\\nu \\\\frac{\\\\partial^2 u}{\\\\partial x^2}. Physical properties: viscosity nu = 0.07. Boundary conditions: all boundaries periodic boundary conditions. Initial conditions: u = -\\\\frac{2\\\\nu}{\\\\phi} \\\\frac{\\\\partial \\\\phi}{\\\\partial x} + 4, where \\\\phi = \\\\exp\\\\left(\\\\frac{-x^2}{4\\\\nu}\\\\right) + \\\\exp\\\\left(\\\\frac{-(x - 2\\\\pi)^2}{4\\\\nu}\\\\right). Domain: x: [0, 2]. Grid: Nx = 101. Time: final time T = 2, time steps nt = 500. Method: finite difference, semi-discrete methods. Write a Python script to solve this problem and return only the complete Python code, without any explanation or additional text.",
            "key": 16
        },
        {
            "name": "2D linear convection equation",
            "prompt": "Simulate the problem: 2D linear convection equation. Equation format: \\\\frac{\\\\partial u}{\\\\partial t} + c \\\\frac{\\\\partial u}{\\\\partial x} + c \\\\frac{\\\\partial u}{\\\\partial y} = 0. Physical properties: wave speed c = 1. Boundary conditions: all boundaries: u = 1 for x = 0,2 and y = 0,2. Initial conditions: u(x,y) = 2 for 0.5 \u2264 x, y \u2264 1, and u(x,y) = 1 everywhere else. Domain: x: [0, 2], y: [0, 2]. Grid: Nx = 101, Ny = 101. Time: final time T = 2, time steps nt = 500. Method: finite difference, semi-discrete methods. Write a Python script to solve this problem and return only the complete Python code, without any explanation or additional text.",
            "key": 17
        },
        {
            "name": "2D convection equation",
            "prompt": "Simulate the problem: 2D convection equation. Equation format: \\\\frac{\\\\partial u}{\\\\partial t} + u \\\\frac{\\\\partial u}{\\\\partial x} + v \\\\frac{\\\\partial u}{\\\\partial y} = 0 \\\\] \\n \\\\[ \\\\frac{\\\\partial v}{\\\\partial t} + u \\\\frac{\\\\partial v}{\\\\partial x} + v \\\\frac{\\\\partial v}{\\\\partial y} = 0. Physical properties: {}. Boundary conditions: all boundaries: u = 1, v = 1 for x = 0,2 and y = 0,2. Initial conditions: u(x,y) = 2 for 0.5 \u2264 x, y \u2264 1, and u(x,y) = 1 everywhere else; v(x,y) = 2 for 0.5 \u2264 x, y \u2264 1, and v(x,y) = 1 everywhere else. Domain: x: [0, 2], y: [0, 2]. Grid: Nx = 101, Ny = 101. Time: final time T = 2, time steps nt = 500. Method: finite difference, semi-discrete methods. Write a Python script to solve this problem and return only the complete Python code, without any explanation or additional text.",
            "key": 18
        },
        {
            "name": "2D diffusion equation",
            "prompt": "Simulate the problem: 2D diffusion equation. Equation format: \\n \\\\[ \\\\frac{\\\\partial u}{\\\\partial t} = \\\\nu \\\\frac{\\\\partial^2 u}{\\\\partial x^2} + \\\\nu \\\\frac{\\\\partial^2 u}{\\\\partial y^2} \\\\]. Physical properties: viscosity nu =0.05. Boundary conditions: all boundaries: u = 1 for x = 0,2 and y = 0,2. Initial conditions: u(x,y) = 2 for 0.5 \u2264 x, y \u2264 1, and u(x,y) = 1 everywhere else. Domain: x: [0, 2], y: [0, 2]. Grid: Nx = 101, Ny = 101. Time: final time T = 2, time steps nt = 500. Method: finite difference, semi-discrete methods. Write a Python script to solve this problem and return only the complete Python code, without any explanation or additional text.",
            "key": 19
        },
        {
            "name": "2D Burgers' equation",
            "prompt": "Simulate the problem: 2D Burgers' equation. Equation format: \\frac{\\partial u}{\\partial t} + u \\frac{\\partial u}{\\partial x} + v \\frac{\\partial u}{\\partial y} = \\nu \\left( \\frac{\\partial^2 u}{\\partial x^2} + \\frac{\\partial^2 u}{\\partial y^2} \\right) \\frac{\\partial v}{\\partial t} + u \\frac{\\partial v}{\\partial x} + v \\frac{\\partial v}{\\partial y} = \\nu \\left( \\frac{\\partial^2 v}{\\partial x^2} + \\frac{\\partial^2 v}{\\partial y^2} \\right). Physical properties: viscosity nu = 0.01. Boundary conditions: all boundaries u = 1, v = 1 for x = 0,2 and y = 0,2. Initial conditions: u(x,y) = 2 for 0.5 \u2264 x, y \u2264 1, and u(x,y) = 1 everywhere else ;v(x,y) = 2 for 0.5 \u2264 x, y \u2264 1, and v(x,y) = 1 everywhere else. Domain: x: [0, 2], y: [0, 2]. Grid: Nx = 101, Ny = 101. Time: final time T = 2, time steps nt = 500. Method: finite difference, semi-discrete methods. Write a Python script to solve this problem and return only the complete Python code, without any explanation or additional text.",
            "key": 20
        },
        {
            "name": "2D Laplace equation",
            "prompt": "Simulate the problem: 2D Laplace equation. Equation format: \\frac{\\partial^2 p}{\\partial x^2} + \\frac{\\partial^2 p}{\\partial y^2} = 0. Physical properties: {}. Boundary conditions: all boundaries: p = 0 at x = 0, p = y at x = 2,\\frac{\\partial p}{\\partial y} = 0 at y = 0, 1. Initial conditions: p = 0 everywhere. Domain: x: [0, 2], y: [0, 2]. Grid: Nx = 101, Ny = 101. Time: final time T = 2, time steps nt = 500. Method: finite difference, semi-discrete methods. Write a Python script to solve this problem and return only the complete Python code, without any explanation or additional text.",
            "key": 21
        },
        {
            "name": "2D Poisson equation",
            "prompt": "Simulate the problem: 2D Poisson equation. Equation format: \\frac{\\partial^2 p}{\\partial x^2} + \\frac{\\partial^2 p}{\\partial y^2} = b\n. Physical properties: source term: b_{i,j} = 100 at i = nx/4, j=ny/4; b_{i,j}=-100 at i=3nx/4, j=3ny/4; b_{i,j}=0, elsewhere. Boundary conditions: all boundaries: p = 0 at x = 0, x = 2 and y = 0 and y = 1. Initial conditions: p = 0. Domain: x: [0, 2], y: [0, 2]. Grid: Nx = 101, Ny = 101. Time: final time T = 2, time steps nt = 500. Method: finite difference, semi-discrete methods. Write a Python script to solve this problem and return only the complete Python code, without any explanation or additional text.",
            "key": 22
        },
        {
            "name": "Channel Flow with Navier\u2013Stokes",
            "prompt": "Simulate the problem: Channel Flow with Navier\u2013Stokes. Equation format: \\begin{align}\n\\frac{\\partial u}{\\partial t} + u \\frac{\\partial u}{\\partial x} + v \\frac{\\partial u}{\\partial y} &= -\\frac{1}{\\rho} \\frac{\\partial p}{\\partial x} + \\nu \\left( \\frac{\\partial^2 u}{\\partial x^2} + \\frac{\\partial^2 u}{\\partial y^2} \\right) + F \\\\\n\\frac{\\partial v}{\\partial t} + u \\frac{\\partial v}{\\partial x} + v \\frac{\\partial v}{\\partial y} &= -\\frac{1}{\\rho} \\frac{\\partial p}{\\partial y} + \\nu \\left( \\frac{\\partial^2 v}{\\partial x^2} + \\frac{\\partial^2 v}{\\partial y^2} \\right) \\\\\n\\frac{\\partial^2 p}{\\partial x^2} + \\frac{\\partial^2 p}{\\partial y^2} &= -\\rho \\left( \\frac{\\partial u}{\\partial x} \\frac{\\partial u}{\\partial x} + 2 \\frac{\\partial u}{\\partial y} \\frac{\\partial v}{\\partial x} + \\frac{\\partial v}{\\partial y} \\frac{\\partial v}{\\partial y} \\right)\n\\end{align}. Physical properties: source term: F=1  everywhere; density: rho = 1, viscosity: nu = 0.1. Boundary conditions: all boundaries: u,v,p\n  are periodic on x=0,2\nu,v=0\n at y=0,2\n\\frac{\\partial p}{\\partial y} = 0\n at y=0,2. Initial conditions: p = 0, u = 0, v = 0. Domain: x: [0, 2], y: [0, 2]. Grid: Nx = 101, Ny = 101. Time: final time T = 2, time steps nt = 500. Method: finite difference, semi-discrete methods. Write a Python script to solve this problem and return only the complete Python code, without any explanation or additional text.",
            "key": 23
        },
        {
            "name": "Cavity Flow with Navier\u2013Stokes",
            "prompt": "Simulate the problem: Cavity Flow with Navier\u2013Stokes. Equation format: \\begin{align}\n\\frac{\\partial u}{\\partial t} + u \\frac{\\partial u}{\\partial x} + v \\frac{\\partial u}{\\partial y} &= -\\frac{1}{\\rho} \\frac{\\partial p}{\\partial x} + \\nu \\left( \\frac{\\partial^2 u}{\\partial x^2} + \\frac{\\partial^2 u}{\\partial y^2} \\right) \\\\\n\\frac{\\partial v}{\\partial t} + u \\frac{\\partial v}{\\partial x} + v \\frac{\\partial v}{\\partial y} &= -\\frac{1}{\\rho} \\frac{\\partial p}{\\partial y} + \\nu \\left( \\frac{\\partial^2 v}{\\partial x^2} + \\frac{\\partial^2 v}{\\partial y^2} \\right) \\\\\n\\frac{\\partial^2 p}{\\partial x^2} + \\frac{\\partial^2 p}{\\partial y^2} &= -\\rho \\left( \\frac{\\partial u}{\\partial x} \\frac{\\partial u}{\\partial x} + 2 \\frac{\\partial u}{\\partial y} \\frac{\\partial v}{\\partial x} + \\frac{\\partial v}{\\partial y} \\frac{\\partial v}{\\partial y} \\right)\n\\end{align}. Physical properties: density: rho = 1, viscosity: nu = 0.1. Boundary conditions: {'all boundaries': 'u=1\\n  at y=2\\n (the \"lid\");\\n\\nu,v=0\\n on the other boundaries;\\n\\n\u2202p\u2202y=0\\n at y=0\\n;\\n\\np=0\\n at y=2\\n\\x0crac{\\\\partial p}{\\\\partial y} = 0\\n at x=0,2'}. Initial conditions: p = 0, u = 0, v = 0. Domain: x: [0, 2], y: [0, 2]. Grid: Nx = 101, Ny = 101. Time: final time T = 2, time steps nt = 500. Method: finite difference, semi-discrete methods. Write a Python script to solve this problem and return only the complete Python code, without any explanation or additional text.",
            "key": 24
        }
    ]
}