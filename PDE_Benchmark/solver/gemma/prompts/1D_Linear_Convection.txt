```python
import numpy as np
from scipy.io import savemat

# Parameters
c = 1.0
epsilon = 5e-4
x_start = -5
x_end = 5
t_start = 0
t_end = 10
dt = 0.01
dx = 0.1

# Spatial domain
x = np.arange(x_start, x_end + dx, dx)
nt = int((t_end - t_start) / dt)

# Initial condition
u = np.exp(-x**2)

# Time loop
u_save = np.zeros_like(u)
for n in range(nt):
    u_next = u.copy()
    for i in range(1, len(u) - 1):
        u_next[i] = u[i] - dt * c * (u[i + 1] - u[i - 1]) / (2 * dx) + epsilon * dt * (u[i + 1] - 2 * u[i] + u[i - 1]) / (dx**2)
    u = u_next
    u_save = u

savemat('u_final.mat', {'u_final': u_save})
```