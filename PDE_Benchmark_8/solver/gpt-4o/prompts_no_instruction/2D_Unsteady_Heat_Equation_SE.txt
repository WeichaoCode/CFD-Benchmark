```python
import numpy as np

# Parameters
alpha = 0.01  # thermal diffusivity
Q0 = 200.0  # source term strength
sigma = 0.1  # source term spread
nx, ny = 41, 41  # grid points
x_min, x_max = -1.0, 1.0
y_min, y_max = -1.0, 1.0
t_max = 3.0  # maximum time
r = 0.25  # stability factor

# Discretization
dx = (x_max - x_min) / (nx - 1)
dy = (y_max - y_min) / (ny - 1)
dt = r * dx**2 / alpha

# Create grid
x = np.linspace(x_min, x_max, nx)
y = np.linspace(y_min, y_max, ny)
X, Y = np.meshgrid(x, y)

# Initial condition
T = 1 + 200 * np.exp(-(X**2 + Y**2) / (2 * sigma**2))

# Time-stepping
nt = int(t_max / dt)
for n in range(nt):
    Tn = T.copy()
    q = Q0 * np.exp(-(X**2 + Y**2) / (2 * sigma**2))
    
    # Update temperature field
    T[1:-1, 1:-1] = (Tn[1:-1, 1:-1] +
                     alpha * dt / dx**2 * (Tn[2:, 1:-1] - 2 * Tn[1:-1, 1:-1] + Tn[:-2, 1:-1]) +
                     alpha * dt / dy**2 * (Tn[1:-1, 2:] - 2 * Tn[1:-1, 1:-1] + Tn[1:-1, :-2]) +
                     dt * q[1:-1, 1:-1])
    
    # Apply boundary conditions
    T[:, 0] = 1
    T[:, -1] = 1
    T[0, :] = 1
    T[-1, :] = 1

# Save the final temperature field
save_values = ['T']
np.save('T.npy', T)
```