```python
import numpy as np

# Problem parameters
k = 1000.0  # W/(m.K)
h = 62.5  # W/(m^2.K)
T_inf = 20.0  # °C
hP_kA = 25.0  # m^-2
L = 0.5  # m

# Boundary conditions
T_0 = 100.0  # °C
T_L = 200.0  # °C

# Numerical parameters
n_cells = 50
dx = L / n_cells

# Discretization
x = np.linspace(dx / 2, L - dx / 2, n_cells)

# Initialize temperature array
T = np.zeros(n_cells)

# Finite Volume Method
# Construct the coefficient matrix A and the source vector b
A = np.zeros((n_cells, n_cells))
b = np.zeros(n_cells)

# Interior cells
for i in range(1, n_cells - 1):
    A[i, i - 1] = -k / dx**2
    A[i, i] = 2 * k / dx**2 + hP_kA
    A[i, i + 1] = -k / dx**2
    b[i] = hP_kA * T_inf

# Boundary cells
A[0, 0] = 2 * k / dx**2 + hP_kA
A[0, 1] = -k / dx**2
b[0] = hP_kA * T_inf + k / dx**2 * T_0

A[n_cells - 1, n_cells - 2] = -k / dx**2
A[n_cells - 1, n_cells - 1] = 2 * k / dx**2 + hP_kA
b[n_cells - 1] = hP_kA * T_inf + k / dx**2 * T_L

# Solve the linear system
T = np.linalg.solve(A, b)

# Save the temperature distribution
np.save('T.npy', T)
```