```python
import numpy as np

# Grid parameters
nx = ny = 101  # Number of grid points
dx = dy = 2.0/(nx-1)  # Grid spacing
x = np.linspace(0, 2, nx)
y = np.linspace(0, 2, ny)
X, Y = np.meshgrid(x, y)

# Time parameters
dt = 0.5 * min(dx,dy)**2  # Time step size
t_final = 0.3777
nt = int(t_final/dt)  # Number of time steps

# Physical parameters
nu = 0.05  # Diffusion coefficient

# Initialize solution array
u = np.ones((ny, nx))

# Set initial condition
u[(X >= 0.5) & (X <= 1) & (Y >= 0.5) & (Y <= 1)] = 2

# Time stepping coefficients
alpha = nu*dt/(dx*dx)

# Time stepping
for n in range(nt):
    un = u.copy()
    
    # Interior points
    u[1:-1,1:-1] = un[1:-1,1:-1] + alpha*(
        un[1:-1,2:] + un[1:-1,:-2] + 
        un[2:,1:-1] + un[:-2,1:-1] - 
        4*un[1:-1,1:-1])
    
    # Boundary conditions
    u[0,:] = 1  # Bottom
    u[-1,:] = 1  # Top
    u[:,0] = 1  # Left
    u[:,-1] = 1  # Right

# Save final solution
np.save('u', u)
```