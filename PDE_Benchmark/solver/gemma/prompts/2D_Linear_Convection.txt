```python
import numpy as np
from numpy import array
import matplotlib.pyplot as plt

# Spatial domain
x = np.linspace(0, 2, 101)
y = np.linspace(0, 2, 101)
X, Y = np.meshgrid(x, y)

# Time domain
t_start = 0
t_end = 0.50
dt = 0.01
t = np.arange(t_start, t_end + dt, dt)

# Initial conditions
u = np.ones((len(X), len(Y)))
u[int(len(X) * 0.5):int(len(X) * 1.5), int(len(Y) * 0.5):int(len(Y) * 1.5)] = 2

# Boundary conditions
u[0, :] = 1
u[-1, :] = 1
u[:, 0] = 1
u[:, -1] = 1

# Convection speed
c = 1

# Finite difference method
for i in range(1, len(t)):
    u_new = u.copy()
    for j in range(1, len(X) - 1):
        for k in range(1, len(Y) - 1):
            u_new[j, k] = u[j, k] - dt * c * (u[j + 1, k] - u[j - 1, k]) / (2 * dx) - dt * c * (u[j, k + 1] - u[j, k - 1]) / (2 * dy)
    u = u_new

# Save the final solution
np.save('u', u)
```