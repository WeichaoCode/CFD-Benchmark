```python
import numpy as np
from scipy.sparse import diags
from scipy.sparse.linalg import spsolve

# Parameters
H = 2.0  # Height of the domain
N = 100  # Number of grid points
dy = H / (N - 1)  # Grid spacing
mu = 1.0  # Molecular viscosity

# Cess model parameters
A_plus = 26.0
B = 1.0 / 0.41
C = 5.5

# Grid
y = np.linspace(0, H, N)

# Initial condition
ubar = np.zeros(N)

# Cess model for turbulent viscosity
def mu_t(y, H):
    eta = y / H
    return 0.5 * (1 + np.tanh(A_plus * (eta - 0.5))) * (B * eta * (1 - eta) + C * eta**2 * (1 - eta)**2)

# Effective viscosity
mu_eff = mu + mu_t(y, H)

# Construct the coefficient matrix
diagonals = np.zeros((3, N))
diagonals[0, 1:] = -mu_eff[:-1] / dy**2
diagonals[1, 1:-1] = (mu_eff[:-1] + mu_eff[1:]) / dy**2
diagonals[2, :-1] = -mu_eff[1:] / dy**2

# Apply boundary conditions
diagonals[1, 0] = 1.0
diagonals[1, -1] = 1.0
diagonals[0, 1] = 0.0
diagonals[2, -2] = 0.0

# Right-hand side
rhs = -np.ones(N)
rhs[0] = 0.0
rhs[-1] = 0.0

# Solve the linear system
A = diags(diagonals, offsets=[-1, 0, 1], format='csc')
ubar = spsolve(A, rhs)

# Save the solution
np.save('ubar.npy', ubar)
```