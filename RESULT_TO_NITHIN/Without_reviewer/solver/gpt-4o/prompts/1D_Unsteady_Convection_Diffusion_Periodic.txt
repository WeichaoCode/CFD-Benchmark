```python
import numpy as np

# Parameters
u = 0.2  # m/s
rho = 1.0  # kg/m^3
Gamma = 0.001  # kg/(m*s)
L = 2.0  # Length of the domain
T = 2.5  # Total time
m = 0.5  # Center of the Gaussian
s = 0.1  # Width of the Gaussian

# Numerical parameters
nx = 100  # Number of spatial points
nt = 500  # Number of time steps
dx = L / nx  # Spatial step size
dt = T / nt  # Time step size

# Stability condition
alpha = Gamma / rho
sigma = u * dt / dx
nu = alpha * dt / dx**2

# Initialize the field
x = np.linspace(0, L, nx)
phi = np.exp(-((x - m) / s) ** 2)

# Time-stepping loop
for n in range(nt):
    phi_old = phi.copy()
    for i in range(1, nx - 1):
        phi[i] = (phi_old[i] - sigma * (phi_old[i] - phi_old[i - 1])
                  + nu * (phi_old[i + 1] - 2 * phi_old[i] + phi_old[i - 1]))
    # Periodic boundary conditions
    phi[0] = (phi_old[0] - sigma * (phi_old[0] - phi_old[-2])
              + nu * (phi_old[1] - 2 * phi_old[0] + phi_old[-2]))
    phi[-1] = phi[0]

# Save the final solution
np.save('phi.npy', phi)
```