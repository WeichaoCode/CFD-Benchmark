```python
import numpy as np

# Parameters
nu = 0.07
nx = 101
nt = 100
dx = 2 * np.pi / (nx - 1)
dt = dx * nu

# Spatial grid
x = np.linspace(0, 2 * np.pi, nx)

# Initial condition
phi = np.exp(-x**2 / (4 * nu)) + np.exp(-(x - 2 * np.pi)**2 / (4 * nu))
dphi_dx = (-x / (2 * nu)) * np.exp(-x**2 / (4 * nu)) + (-(x - 2 * np.pi) / (2 * nu)) * np.exp(-(x - 2 * np.pi)**2 / (4 * nu))
u = -2 * nu / phi * dphi_dx + 4

# Time-stepping loop
for _ in range(nt):
    f = 0.5 * u**2
    f_diff = (f - np.roll(f, 1)) / dx
    diffusion = (np.roll(u, -1) - 2 * u + np.roll(u, 1)) / dx**2
    du_dt = -f_diff + nu * diffusion
    u += dt * du_dt

# Save the final velocity field
np.save('u.npy', u)
```