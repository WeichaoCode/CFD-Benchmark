```python
import numpy as np

# Parameters
nu = 0.3  # diffusion coefficient
L = 1.0   # length of the domain
T = 0.0333  # total time
nx = 101  # number of spatial points
nt = 1000  # number of time steps
dx = L / (nx - 1)  # spatial step size
dt = T / nt  # time step size

# Stability condition for explicit method
assert dt <= dx**2 / (2 * nu), "Time step is too large for stability."

# Initial condition
u = np.ones(nx)
u[int(0.5 / dx):] = 2

# Boundary conditions
u[0] = 1
u[-1] = 0

# Time-stepping loop
for n in range(nt):
    un = u.copy()
    for i in range(1, nx - 1):
        u[i] = un[i] + nu * dt / dx**2 * (un[i+1] - 2*un[i] + un[i-1])
    # Reapply boundary conditions
    u[0] = 1
    u[-1] = 0

# Save the final solution
np.save('u', u)
```