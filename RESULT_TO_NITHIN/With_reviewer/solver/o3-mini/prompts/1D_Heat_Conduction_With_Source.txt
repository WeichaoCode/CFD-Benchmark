#!/usr/bin/env python3
import numpy as np

# Problem parameters
L = 0.5                      # Length of the rod [m]
N = 51                       # Number of nodes
dx = L / (N - 1)             # Uniform grid spacing
k = 1000.0                   # Thermal conductivity [W/(m·K)]
Q = 2e6                      # Uniform heat generation [W/m^3]

# Boundary conditions
T0 = 100.0                   # Temperature at x = 0 [°C]
TL = 200.0                   # Temperature at x = L [°C]

# Number of interior nodes (excluding boundaries)
n = N - 2

# Initialize coefficient matrix A and right-hand side vector b for interior nodes
A = np.zeros((n, n))
b = np.full(n, -Q)

# Finite volume discretization coefficients
coef_main = 2 * k / dx**2
coef_off = - k / dx**2

# Assemble matrix A
for i in range(n):
    A[i, i] = coef_main
    if i - 1 >= 0:
        A[i, i - 1] = coef_off
    if i + 1 < n:
        A[i, i + 1] = coef_off

# Modify b to account for Dirichlet boundary conditions
b[0] += k / dx**2 * T0
b[-1] += k / dx**2 * TL

# Solve the linear system for interior temperatures
T_interior = np.linalg.solve(A, b)

# Assemble full temperature profile including boundary nodes
T = np.zeros(N)
T[0] = T0
T[1:-1] = T_interior
T[-1] = TL

# Save the final solution as a 1D NumPy array in a file named T.npy
np.save("T.npy", T)