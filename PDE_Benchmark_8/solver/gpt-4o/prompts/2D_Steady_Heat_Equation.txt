```python
import numpy as np

# Domain parameters
Lx, Ly = 5.0, 4.0  # Length of the domain in x and y directions
nx, ny = 51, 41    # Number of grid points in x and y directions
dx, dy = Lx / (nx - 1), Ly / (ny - 1)  # Grid spacing

# Initialize the temperature field
T = np.zeros((ny, nx))

# Apply boundary conditions
T[:, 0] = 10.0   # Left boundary
T[:, -1] = 40.0  # Right boundary
T[0, :] = 0.0    # Top boundary
T[-1, :] = 20.0  # Bottom boundary

# Iterative solver parameters
tolerance = 1e-5
max_iterations = 10000

# Iterative solver using the Gauss-Seidel method
for iteration in range(max_iterations):
    T_old = T.copy()
    
    # Update the temperature field
    for j in range(1, ny-1):
        for i in range(1, nx-1):
            T[j, i] = 0.25 * (T_old[j, i+1] + T[j, i-1] + T_old[j+1, i] + T[j-1, i])
    
    # Check for convergence
    diff = np.linalg.norm(T - T_old, ord=np.inf)
    if diff < tolerance:
        print(f"Converged after {iteration} iterations.")
        break

# Save the final temperature field
np.save('T.npy', T)
```