```python
import numpy as np
import scipy.sparse as sp
import scipy.sparse.linalg as la

# Problem parameters
k = 1000.0  # Thermal conductivity [W/(m·K)]
h = 62.5    # Convective heat transfer coefficient [W/(m²·K)]
T_inf = 20.0  # Ambient temperature [°C]
hP_kA = 25.0  # Convective term coefficient [m⁻²]
L = 0.5     # Domain length [m]

# Discretization
nx = 100  # Number of grid points
dx = L / (nx - 1)  # Grid spacing

# Grid
x = np.linspace(0, L, nx)

# Boundary conditions
T_left = 100.0   # Left boundary temperature [°C]
T_right = 200.0  # Right boundary temperature [°C]

# Finite Volume Method
# Construct sparse matrix A and vector b
diagonals = np.zeros((3, nx))
main_diag = np.zeros(nx)
rhs = np.zeros(nx)

# Interior points
for i in range(1, nx-1):
    # Diffusion term coefficients
    D_west = k / dx
    D_east = k / dx
    
    # Convection term
    S_u = hP_kA * T_inf * dx
    S_p = -hP_kA * dx
    
    # Assemble matrix
    main_diag[i] = D_west + D_east - S_p
    diagonals[0, i] = -D_west
    diagonals[2, i] = -D_east
    rhs[i] = S_u

# Boundary conditions
main_diag[0] = 1.0
rhs[0] = T_left

main_diag[-1] = 1.0
rhs[-1] = T_right

# Create sparse matrix
diag_indices = [-1, 0, 1]
A = sp.diags(diagonals, diag_indices, shape=(nx, nx))

# Solve linear system
T = la.spsolve(A, rhs)

# Save solution
np.save('T.npy', T)
```