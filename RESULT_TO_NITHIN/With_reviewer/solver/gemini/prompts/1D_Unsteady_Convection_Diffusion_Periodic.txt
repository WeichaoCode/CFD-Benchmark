```python
import numpy as np

# Problem parameters
u = 0.2  # m/s
rho = 1.0  # kg/m^3
Gamma = 0.001  # kg/(m.s)

# Domain parameters
x_start = 0.0
x_end = 2.0
t_start = 0.0
t_end = 2.5

# Numerical parameters
nx = 100
nt = 500
dx = (x_end - x_start) / nx
dt = (t_end - t_start) / nt

# Initialize solution
x = np.linspace(x_start, x_end, nx, endpoint=False)  # Use endpoint=False for periodic BC
phi = np.exp(-((x - 0.5) / 0.1)**2)

# Time loop
for n in range(nt):
    phi_old = phi.copy()

    # Finite Volume discretization (Central Differencing for diffusion, Upwind for convection)
    phi[1:-1] = phi_old[1:-1] - dt * u * (phi_old[1:-1] - phi_old[0:-2]) / dx + \
                 dt * Gamma / rho * (phi_old[2:] - 2 * phi_old[1:-1] + phi_old[0:-2]) / dx**2

    # Periodic boundary conditions
    phi[0] = phi[-1]
    phi[-1] = phi[0]

# Save the final solution
np.save('phi.npy', phi)
```