```python
import numpy as np

# Parameters
width = 5.0
height = 4.0
dx = 0.05
dy = 0.05
nx = int(width / dx) + 1
ny = int(height / dy) + 1
omega = 1.5  # Over-relaxation factor
tolerance = 1e-6

# Initialize temperature field
T = np.zeros((ny, nx))

# Apply boundary conditions
T[:, 0] = 10.0  # Left boundary (x = 0)
T[:, -1] = 40.0  # Right boundary (x = 5)
T[-1, :] = 0.0  # Top boundary (y = 4)
T[0, :] = 20.0  # Bottom boundary (y = 0)

# Successive Over-Relaxation (SOR) method
def solve_sor(T, omega, tolerance):
    error = 1.0
    while error > tolerance:
        error = 0.0
        for j in range(1, ny-1):
            for i in range(1, nx-1):
                T_old = T[j, i]
                T_new = (1 - omega) * T_old + omega * 0.25 * (T[j+1, i] + T[j-1, i] + T[j, i+1] + T[j, i-1])
                error = max(error, abs(T_new - T_old))
                T[j, i] = T_new
    return T

# Solve the PDE
T = solve_sor(T, omega, tolerance)

# Save the final solution
save_values = ['T']
np.save('T.npy', T)
```