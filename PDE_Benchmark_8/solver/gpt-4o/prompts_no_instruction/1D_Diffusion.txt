```python
import numpy as np

# Parameters
nu = 0.3  # diffusion coefficient
nx = 41  # number of spatial grid points
nt = 20  # number of time steps
sigma = 0.2  # CFL number

# Spatial domain
x = np.linspace(0, 1, nx)
dx = 2 / (nx - 1)

# Time step
dt = sigma * dx**2 / nu

# Initial condition
u = np.ones(nx)
u[int(0.5 / dx):] = 2

# Boundary conditions
u[0] = 1
u[-1] = 0

# Time-stepping loop
for n in range(nt):
    un = u.copy()
    for i in range(1, nx - 1):
        u[i] = un[i] + nu * dt / dx**2 * (un[i+1] - 2*un[i] + un[i-1])
    # Reapply boundary conditions
    u[0] = 1
    u[-1] = 0

# Save the final solution
np.save('u.npy', u)
```

This code sets up and solves the 1D diffusion equation using a finite difference method. It initializes the solution with the given initial conditions, applies the specified Dirichlet boundary conditions, and iterates over the specified number of time steps. The final solution is saved as a 1D NumPy array in a file named `u.npy`.