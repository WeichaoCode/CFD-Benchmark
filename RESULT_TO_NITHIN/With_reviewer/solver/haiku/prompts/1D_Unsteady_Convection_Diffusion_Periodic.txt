```python
import numpy as np

# Parameters
L = 2.0  # domain length
nx = 200  # number of cells
dx = L/nx  # cell size
u = 0.2  # velocity
rho = 1.0  # density
gamma = 0.001  # diffusion coefficient
D = gamma/rho  # diffusivity

# Time parameters
t_final = 2.5
CFL = 0.5
dt = CFL * dx / (abs(u) + 2*D/dx)
nt = int(t_final/dt)

# Grid
x = np.linspace(dx/2, L-dx/2, nx)  # cell centers
xf = np.linspace(0, L, nx+1)  # face locations

# Initial condition
m = 0.5  # mean of Gaussian
s = 0.1  # standard deviation
phi = np.exp(-(x-m)**2/s**2)

# Time stepping
for n in range(nt):
    phi_old = phi.copy()
    
    # Periodic BC for ghost cells
    phi_m1 = np.roll(phi_old, 1)  # i-1
    phi_p1 = np.roll(phi_old, -1)  # i+1
    
    # Convective fluxes (upwind)
    if u > 0:
        conv = u*(phi_old - phi_m1)/dx
    else:
        conv = u*(phi_p1 - phi_old)/dx
        
    # Diffusive fluxes (central)
    diff = D*(phi_p1 - 2*phi_old + phi_m1)/dx**2
    
    # Update solution
    phi = phi_old - dt*(conv - diff)

# Save final solution
np.save('phi', phi)
```