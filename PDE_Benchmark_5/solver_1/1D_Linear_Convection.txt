That error occurs because you are trying to subtract arrays with different sizes (i.e., differing number of elements). You are trying to subtract an array of size 80 from one of size 81. Here, the shape refers to the size of the array.

Python's broadcasting feature allows for certain types of operation between arrays of different shapes, but only under certain conditions. Specifically, arrays can be broadcasted together if their shapes differ by only one in the trailing dimensions. In this case, your shapes differ by one but not in the trailing dimension, hence the error.

To correct this problem you need to use a slice of `u_storage[t-1, :]` that matches the shape of `(u_storage[t-1, 1:] - u_storage[t-1, :-1])`.

Here is a modification to your code that should fix the issue:

```python
import numpy as np
import matplotlib.pyplot as plt

# Step 1: Define parameters
L = 2.0       # Length of the domain
T = 1.0       # Time of simulation
nx = 80       # Number of spatial points in the domain
nt = 100      # Number of time steps
c = 1.0       # Wave speed
dx = L/nx     # Spatial discretization size
dt = T/nt     # Time discretization size
CFL = c*dt/dx # CFL number

# Step 2: Discretize space and time
x = np.linspace(0, L, nx)  # Define spatial grid
t = np.linspace(0, T, nt)  # Define time grid

# Step 3: Set initial wave profile
u_storage = np.zeros((nt,nx)) 
u_storage[0,:] = np.piecewise(x, [x < 0.5, x >= 0.5], [1.0, 0.0])

# Step 4: Iterate using finite difference scheme
for t in range(1, nt):
    u_storage[t, 1:-1] = u_storage[t-1, 1:-1] - CFL * 0.5 * (u_storage[t-1, 2:] - u_storage[t-1, :-2])

# Step 5: Plot the wave evolution
for i in range(nt):
    if i % 20 == 0: # Only plot every 20th time step for clarity
        plt.plot(x, u_storage[i,:])
plt.show()
```

In the modified version, I have adjusted the computation of the finite difference to only consider the inner points of the grid (these are the points 1 to nx-1, with nx being excluded), essentially skipping the first and last points (the boundaries). The boundaries could be handled separately according to the appropriate boundary conditions.